name: C/C++ CI

on: [push, pull_request]

jobs:
  tag_generator:
    name: 'Generate tag'
    
    steps:
     - name: Generate nightly release tag
       id: tag
       run: |
         echo "release_tag=NightBuild_$(date +"%Y.%m.%d_%H-%M")" >> $GITHUB_OUTPUT

  windows:
    name: 'Windows'
    runs-on: windows-latest
    
    env:
     solution: 'vs-project/bspguy.sln'
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
     - name: Checkout
       uses: actions/checkout@v2
       with:
            fetch-depth: 0
            submodules: true

     - name: Add msbuild to PATH
       uses: microsoft/setup-msbuild@v1.1
       with:
            vs-prerelease: true

     - name: Build app for release
       run: msbuild ${{ env.solution }} -m -t:rebuild -verbosity:diag -property:Configuration=Release

     - name: Upload windows artifacts
       uses: actions/upload-artifact@v3
       with:
         name: Windows
         path: ./vs-project/Release/bspguy.exe  
        
     - name: Publish nightly binaries for windows
       uses: softprops/action-gh-release@v1
       with:
         tag_name: ${{ steps.tag.outputs.release_tag }}
         files: |
             ./vs-project/Release/bspguy.exe

  build-linux:
    runs-on: ubuntu-latest
    
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Download and install dependencies
      run: |
        sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libglfw3-dev libglew-dev libxxf86vm-dev

    - name: Build release
      run: |
        mkdir build; cd build
        cmake .. -DCMAKE_BUILD_TYPE=RELEASE
        make

    - name: Upload linux artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bspguy-linux
        path: build/bspguy
    - name: Publish nightly binaries for linux
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: |
            build/bspguy