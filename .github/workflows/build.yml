name: C/C++ CI

on: [push, pull_request]

jobs:
    get_time_build:
        name: "TAG NAME"
        runs-on: ubuntu-latest
        
        outputs:
            release_tag: ${{ steps.tag.outputs.release_tag }}

        steps:
            - name: Generate nightly release tag
              id: tag
              run: |
               echo "release_tag=NightBuild_$(date +"%Y.%m.%d_%H-%M")" >> $GITHUB_OUTPUT
            
    linux_build:
        name: "Linux"
        needs: get_time_build
        runs-on: ubuntu-latest
        
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        outputs:
            release_tag: ${{ steps.tag.outputs.release_tag }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Download and install dependencies
              run: |
                 sudo apt update
                 sudo apt install gcc-11 g++-11 libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libglfw3-dev libglew-dev libxxf86vm-dev
                 
            - name: Build release
              run: |
                 export CC=`which gcc`
                 export CXX=`which g++`
                 mkdir build; cd build
                 cmake .. -DCMAKE_BUILD_TYPE=RELEASE
                 make

            - name: Publish nightly binaries for linux
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ needs.get_time_build.outputs.release_tag }}
                  files: build/bspguy

    window_build:

        name: 'Windows'
        needs: get_time_build
        runs-on: windows-latest

        env:
            solution: 'vs-project/bspguy.sln'
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  submodules: true

            - name: Add msbuild to PATH
              uses: microsoft/setup-msbuild@v1.1
              with:
                  vs-prerelease: true

            - name: Build app for release
              run: |
                 msbuild ${{ env.solution }} -m -t:rebuild -verbosity:diag -property:Configuration=Release

            - name: Publish nightly binaries for windows
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ needs.get_time_build.outputs.release_tag }}
                  files: ./vs-project/Release/bspguy.exe
            
            - name: Build app for debug
              run: |
                 msbuild ${{ env.solution }} -m -t:rebuild -verbosity:diag -property:Configuration=DebugGithub

            - name: Publish nightly debug binaries for windows
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ needs.get_time_build.outputs.release_tag }}
                  files: ./vs-project/Release/bspguy_debug.exe
            